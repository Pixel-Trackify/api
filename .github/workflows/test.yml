name: üöÄ Run Tests

on:
    push:
        branches:
            - '**'
    pull_request:
        branches:
            - '**'

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_DB: default_db
                    POSTGRES_USER: default_user
                    POSTGRES_PASSWORD: default_password
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd="pg_isready -U default_user" 
                    --health-interval=10s 
                    --health-timeout=5s 
                    --health-retries=5

        steps:
        - name: "üìÇ Checkout code"
          uses: actions/checkout@v2

        - name: "üîë Copy .env.example to .env and replace secrets"
          run: |
                cp .env-example .env
                sed -i 's|DEBUG=.*|DEBUG=${{ secrets.DEBUG }}|' .env
                sed -i 's|ALLOWED_HOSTS=.*|ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}|' .env
                sed -i 's|SECRET_KEY=.*|SECRET_KEY=${{ secrets.SECRET_KEY }}|' .env
                sed -i 's|POSTGRES_DB=.*|POSTGRES_DB=default_db|' .env
                sed -i 's|POSTGRES_USER=.*|POSTGRES_USER=default_user|' .env
                sed -i 's|POSTGRES_PASSWORD=.*|POSTGRES_PASSWORD=default_password|' .env
                sed -i 's|POSTGRES_PORT=.*|POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}|' .env
                sed -i 's|APP_PORT=.*|APP_PORT=${{ secrets.APP_PORT }}|' .env
                sed -i 's|APP_PORT_SSL=.*|APP_PORT_SSL=${{ secrets.APP_PORT_SSL }}|' .env
                sed -i 's|APP_DOMAIN=.*|APP_DOMAIN=${{ secrets.APP_DOMAIN }}|' .env
                sed -i 's|WEBHOOK_BASE_URL=.*|WEBHOOK_BASE_URL=${{ secrets.WEBHOOK_BASE_URL }}|' .env
                sed -i 's|APP_AMBIENT=.*|APP_AMBIENT=${{ secrets.APP_AMBIENT }}|' .env
                sed -i 's|FIRE_BANKING_API_KEY=.*|FIRE_BANKING_API_KEY=${{ secrets.FIRE_BANKING_API_KEY }}|' .env
                sed -i 's|CORS_ALLOW_ALL_ORIGINS=.*|CORS_ALLOW_ALL_ORIGINS=${{ secrets.CORS_ALLOW_ALL_ORIGINS }}|' .env
                sed -i 's|AWS_ACCESS_KEY_ID=.*|AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}|' .env
                sed -i 's|AWS_SECRET_ACCESS_KEY=.*|AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}|' .env
                sed -i 's|AWS_DEFAULT_REGION=.*|AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}|' .env
                sed -i 's|AWS_BUCKET=.*|AWS_BUCKET=${{ secrets.AWS_BUCKET }}|' .env
                sed -i 's|REQUIRE_EMAIL_CONFIRMATION=.*|REQUIRE_EMAIL_CONFIRMATION=${{ secrets.REQUIRE_EMAIL_CONFIRMATION }}|' .env

        - name: "üêç Set up Python"
          uses: actions/setup-python@v4
          with:
            python-version: '3.13'

        - name: "üìÅ Copy app contents to project root"
          run: |
            cp -r app/* .

        - name: "üì¶ Install dependencies"
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: "üìú Run migrations"
          run: |
            python manage.py makemigrations
            python manage.py migrate

        - name: "‚úÖ Run tests"
          run: |
            python manage.py test