openapi: 3.0.3
info:
  title: 'API Pixel Trackify '
  version: 1.0.0
  description: Endpoints da API Pixel Trackify
paths:
  /auth/accounts/{uuid}:
    get:
      operationId: auth_accounts_retrieve
      description: Endpoint para detalhar a conta do usuário.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    put:
      operationId: auth_accounts_update
      description: Endpoint para atualizar a conta do usuário.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: auth_accounts_partial_update
      description: |-
        View para detalhar, atualizar ou excluir a conta do usuário.
        Requer autenticação para edição e só permite que o dono da conta edite.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    delete:
      operationId: auth_accounts_destroy
      description: Endpoint para excluir a conta do usuário.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/change-password/:
    post:
      operationId: auth_change_password_create
      description: Endpoint para alterar a senha do usuário autenticado.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /auth/filter-users/:
    get:
      operationId: auth_filter_users_list
      description: Endpoint para listar, filtrar, pesquisar e ordenar usuários.
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: max_id
        schema:
          type: number
      - in: query
        name: min_id
        schema:
          type: number
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegisterList'
          description: ''
  /auth/login/:
    post:
      operationId: auth_login_create
      description: Endpoint para login.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: Endpoint para logout.
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '205':
          description: No response body
  /auth/my-plan/:
    get:
      operationId: auth_my_plan_retrieve
      description: Endpoint para retornar o plano do usuário autenticado.
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /auth/profile/:
    get:
      operationId: auth_profile_retrieve
      description: Endpoint para visualizar o perfil do usuário autenticado, incluindo
        informações como nome, email, CPF, avatar e plano ativo.
      summary: Visualizar o perfil do usuário autenticado
      tags:
      - Usuários
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              examples:
                ExemploDeResposta(Sucesso):
                  value:
                    uid: 123e4567-e89b-12d3-a456-426614174000
                    name: John Doe
                    email: john.doe@example.com
                    cpf: '12345678901'
                    avatar: https://seu-bucket.s3.amazonaws.com/caminho/para/avatar.jpg
                    date_joined: '2025-03-25T12:00:00Z'
                    is_active: true
                    active_plan:
                      id: 1
                      uid: plan-uid-123
                      name: Plano Premium
                      description: Acesso completo
                      price: 99.99
                      duration: Mensal
                      duration_value: 30
                  summary: Exemplo de Resposta (Sucesso)
          description: ''
    put:
      operationId: auth_profile_update
      description: Endpoint para atualizar o perfil do usuário autenticado. O campo
        `avatar` pode ser atualizado para alterar a imagem de avatar.
      summary: Atualizar o perfil do usuário autenticado
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
            examples:
              ExemploDeRequisição:
                value:
                  name: John Doe
                  avatar: https://seu-bucket.s3.amazonaws.com/caminho/para/avatar.jpg
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              examples:
                ExemploDeResposta(Sucesso):
                  value:
                    uid: 123e4567-e89b-12d3-a456-426614174000
                    name: John Doe
                    email: john.doe@example.com
                    cpf: '12345678901'
                    avatar: https://seu-bucket.s3.amazonaws.com/caminho/para/avatar.jpg
                    date_joined: '2025-03-25T12:00:00Z'
                    is_active: true
                    active_plan:
                      id: 1
                      uid: plan-uid-123
                      name: Plano Premium
                      description: Acesso completo
                      price: 99.99
                      duration: Mensal
                      duration_value: 30
                  summary: Exemplo de Resposta (Sucesso)
          description: ''
  /auth/register-accounts/:
    post:
      operationId: auth_register_accounts_create
      description: Endpoint para registrar um novo usuário. O campo `avatar` é opcional
        e pode ser usado para fornecer a URL de uma imagem de avatar. O campo `plan_uid`
        também é opcional e pode ser usado para associar o usuário a um plano específico.
      summary: Registrar um novo usuário
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
            examples:
              ExemploDeRequisição:
                value:
                  email: joao.gomes@gmail.com
                  cpf: '17464185080'
                  name: João Gomes
                  password: Password123!
                  confirm_password: Password123!
                  plan_uid: 191663b0-d352-4f5e-a16c-91e83ecbd13a
                  avatar: https://seu-bucket.s3.amazonaws.com/caminho/para/avatar.jpg
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
              examples:
                ExemploDeResposta(Sucesso):
                  value:
                    message: Usuário registrado com sucesso!
                    user:
                      uid: 7c0fa97f-89d8-427f-a54a-ee9409ce0acb
                      name: João Gomes
                      email: joao.gomes1@gmail.com
                      avatar: null
                    require_email_confirmation: true
                  summary: Exemplo de Resposta (Sucesso)
                ExemploDeResposta(Erro-DadosInválidos):
                  value:
                    email:
                    - Este campo é obrigatório.
                    password:
                    - As senhas não coincidem.
                    cpf:
                    - CPF inválido.
                    plan_uid:
                    - Plano não encontrado.
                    avatar:
                    - URL inválida para o avatar.
                  summary: Exemplo de Resposta (Erro - Dados inválidos)
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /auth/subscription-history/:
    get:
      operationId: auth_subscription_history_list
      description: Endpoint para retornar o histórico de assinaturas do usuário autenticado.
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSubscription'
          description: ''
  /auth/update-plan/:
    post:
      operationId: auth_update_plan_create
      description: Endpoint para atualizar o plano do usuário autenticado.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUserPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUserPlan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserPlan'
          description: ''
  /auth/users/:
    get:
      operationId: auth_users_list
      description: Endpoint para listar usuários. Apenas administradores podem acessar.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /authentication/token/:
    post:
      operationId: authentication_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /authentication/token/refresh/:
    post:
      operationId: authentication_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /authentication/token/verify/:
    post:
      operationId: authentication_token_verify_create
      description: Este endpoint verifica se um token JWT é válido. Se o token for
        válido, retorna uma mensagem de sucesso e os dados do usuário, incluindo o
        avatar.
      summary: Verificar a validade de um token JWT
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
            examples:
              ExemploDeRequisição:
                value:
                  token: seu_token_jwt_aqui
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token is valid
                  user:
                    type: object
                    properties:
                      uid:
                        type: string
                        example: 7c0fa97f-89d8-427f-a54a-ee9409ce0acb
                      name:
                        type: string
                        example: João Gomes
                      email:
                        type: string
                        example: joao.gomes@gmail.com
                      avatar:
                        type: string
                        example: https://example.com/avatar.jpg
              examples:
                ExemploDeResposta(Sucesso):
                  value:
                    message: Token is valid
                    user:
                      uid: 7c0fa97f-89d8-427f-a54a-ee9409ce0acb
                      name: João Gomes
                      email: joao.gomes@gmail.com
                      avatar: https://example.com/avatar.jpg
                  summary: Exemplo de Resposta (Sucesso)
                ExemploDeResposta(Erro-TokenInválido):
                  value:
                    message: Token is invalid or expired
                    detail: Token is invalid
                  summary: Exemplo de Resposta (Erro - Token Inválido)
                ExemploDeResposta(Erro-UsuárioNãoEncontrado):
                  value:
                    message: User not found
                    detail: No user matching this token was found.
                  summary: Exemplo de Resposta (Erro - Usuário Não Encontrado)
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token is invalid or expired
                  detail:
                    type: string
                    example: Token is invalid
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
                  detail:
                    type: string
                    example: No user matching this token was found.
          description: ''
  /campaigns/:
    get:
      operationId: campaigns_list
      description: Endpoint para listar as campanhas do usuário autenticado com suporte
        a paginação, ordenação e busca.
      summary: Listar campanhas com suporte a paginação, ordenação e busca.
      parameters:
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Campo para ordenação. Use os campos disponíveis: `id`, `title`,
          `created_at`. Exemplo: `?ordering=title` para ordenar por título.'
      - in: query
        name: page
        schema:
          type: integer
        description: Número da página para paginação.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Número de itens por página.
      - in: query
        name: search
        schema:
          type: string
        description: 'Palavra-chave para busca nos campos definidos: `id`, `title`,
          `description`, `created_at`. Exemplo: `?search=Campanha` para buscar campanhas
          relacionadas a ''Campanha''.'
      tags:
      - Campanhas
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        count:
                          type: integer
                          example: 3
                        next:
                          type: string
                          example: http://localhost:8000/campaigns/?page=2
                        previous:
                          type: string
                          example: null
                        results:
                          type: array
                          items:
                            type: object
                            properties:
                              uid:
                                type: string
                                example: 7201a40f-c432-42f7-b875-0d77077990ab
                              title:
                                type: string
                                example: Campanha ZeroOne
                              description:
                                type: string
                                example: Descrição da campanha
                              CPM:
                                type: number
                                example: 12.0
                              created_at:
                                type: string
                                example: '2025-03-31T10:00:00Z'
              examples:
                ExemploDeResposta(Ordenação):
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 3
                      next: 'null'
                      previous: 'null'
                      results:
                      - uid: e0522530-bf1f-4df0-9a1a-8a3ca25e4cf1
                        title: Campanha 2
                        description: Descrição da campanha 2
                        CPM: 15.0
                        created_at: '2025-03-30T10:00:00Z'
                      - uid: 7201a40f-c432-42f7-b875-0d77077990ab
                        title: Campanha ZeroOne
                        description: Descrição da campanha
                        CPM: 12.0
                        created_at: '2025-03-31T10:00:00Z'
                  summary: Exemplo de Resposta (Ordenação)
                ExemploDeResposta(Paginação):
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 3
                      next: http://localhost:8000/campaigns/?page=3&page_size=1
                      previous: http://localhost:8000/campaigns/?page=1&page_size=1
                      results:
                      - uid: e0522530-bf1f-4df0-9a1a-8a3ca25e4cf1
                        title: Campanha 2
                        description: Descrição da campanha 2
                        CPM: 15.0
                        created_at: '2025-03-30T10:00:00Z'
                  summary: Exemplo de Resposta (Paginação)
                ExemploDeResposta(Busca):
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 2
                      next: 'null'
                      previous: 'null'
                      results:
                      - uid: 7201a40f-c432-42f7-b875-0d77077990ab
                        title: Campanha ZeroOne
                        description: Descrição da campanha
                        CPM: 12.0
                        created_at: '2025-03-31T10:00:00Z'
                      - uid: e0522530-bf1f-4df0-9a1a-8a3ca25e4cf1
                        title: Campanha 2
                        description: Descrição da campanha 2
                        CPM: 15.0
                        created_at: '2025-03-30T10:00:00Z'
                  summary: Exemplo de Resposta (Busca)
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Nenhuma campanha encontrada com os critérios de busca.
          description: ''
    post:
      operationId: campaigns_create
      description: Endpoint para criar uma nova campanha vinculada ao usuário autenticado.
        Não é permitido usar gateways que já estão em uso por outras campanhas.
      summary: Criar uma nova campanha
      tags:
      - Campanhas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
            examples:
              ExemploDeRequisição:
                value:
                  title: Campanha ZeroOne
                  description: Descrição da nova campanha
                  CPM: 12
                  integrations:
                  - 846ec04e-2d7b-4343-83f8-dd36776401eb
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
              examples:
                ExemploDeResposta(Sucesso):
                  value:
                    id: 9
                    uid: 57c111f3-02b9-4006-b95c-68b1d1b04351
                    integrations:
                    - 846ec04e-2d7b-4343-83f8-dd36776401eb
                    user: 6f4191cb-0943-4854-a307-cda83b99126e
                    source: Kwai
                    title: Cursinho
                    CPM: '3.70'
                    total_approved: 0
                    total_pending: 0
                    amount_approved: '0.00'
                    amount_pending: '0.00'
                    total_abandoned: 0
                    amount_abandoned: '0.00'
                    total_canceled: 0
                    amount_canceled: '0.00'
                    total_refunded: 0
                    amount_refunded: '0.00'
                    total_rejected: 0
                    amount_rejected: '0.00'
                    total_chargeback: 0
                    amount_chargeback: '0.00'
                    total_ads: '0.00620000'
                    profit: '0'
                    ROI: '0'
                    total_views: 0
                    total_clicks: 0
                    created_at: '2025-03-26T16:52:09.109455-03:00'
                    updated_at: '2025-03-26T16:52:09.132047-03:00'
                    stats:
                      pix: 0
                      credit_card: 0
                      credit_debit: 0
                      boleto: 0
                  summary: Exemplo de Resposta (Sucesso)
                ExemploDeResposta(Erro-GatewayEmUso):
                  value:
                    integrations:
                    - O gateway 'ZeroOne' já está em uso.
                  summary: Exemplo de Resposta (Erro - Gateway em Uso)
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  integrations:
                    type: array
                    items:
                      type: string
                      example: O gateway 'ZeroOne' já está em uso.
                example:
                  integrations:
                  - O gateway 'ZeroOne' já está em uso.
          description: ''
  /campaigns/{uid}/:
    get:
      operationId: campaigns_retrieve
      description: Endpoint para recuperar os detalhes de uma campanha específica
        usando o UUID como identificador.
      summary: Recuperar uma campanha
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID da campanha a ser recuperada.
        required: true
      tags:
      - Campanhas
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
              examples:
                ExemploDeResposta:
                  value:
                  - id: 9
                    uid: 57c111f3-02b9-4006-b95c-68b1d1b04351
                    integrations:
                    - 846ec04e-2d7b-4343-83f8-dd36776401eb
                    user: 6f4191cb-0943-4854-a307-cda83b99126e
                    source: Kwai
                    title: Cursinho
                    CPM: '3.70'
                    total_approved: 0
                    total_pending: 0
                    amount_approved: '0.00'
                    amount_pending: '0.00'
                    total_abandoned: 0
                    amount_abandoned: '0.00'
                    total_canceled: 0
                    amount_canceled: '0.00'
                    total_refunded: 0
                    amount_refunded: '0.00'
                    total_rejected: 0
                    amount_rejected: '0.00'
                    total_chargeback: 0
                    amount_chargeback: '0.00'
                    total_ads: '0.000000'
                    profit: '0'
                    ROI: '0'
                    total_views: 0
                    total_clicks: 0
                    created_at: '2025-03-26T16:52:09.109455-03:00'
                    updated_at: '2025-03-26T16:52:09.132047-03:00'
                    stats:
                      pix: 0
                      credit_card: 0
                      credit_debit: 0
                      boleto: 0
                    overviews:
                    - type: EXPENSE
                      value: 0.0
                      date: '2025-04-02'
                    - type: REVENUE
                      value: 0.0
                      date: '2025-04-02'
                  summary: Exemplo de Resposta
          description: ''
    put:
      operationId: campaigns_update
      description: Endpoint para atualizar completamente os detalhes de uma campanha
        específica.
      summary: Atualizar uma campanha
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID da campanha a ser atualizada.
        required: true
      tags:
      - Campanhas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
            examples:
              ExemploDeRequisição:
                value:
                  title: Campanha Atualizada
                  integrations:
                  - 90490bae-7ebe-4f44-9ebf-ce81ee03e60f
                  CPM: 15
                  source: Kwai
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
              examples:
                ExemploDeResposta:
                  value:
                    uid: 123e4567-e89b-12d3-a456-426614174000
                    title: Campanha Atualizada
                    integrations:
                    - 90490bae-7ebe-4f44-9ebf-ce81ee03e60f
                    CPM: 15
                    source: Kwai
                    created_at: '2025-03-20T12:00:00Z'
                  summary: Exemplo de Resposta
          description: ''
    patch:
      operationId: campaigns_partial_update
      description: Endpoint para atualizar parcialmente os detalhes de uma campanha
        específica.
      summary: Atualizar parcialmente uma campanha
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID da campanha a ser atualizada parcialmente.
        required: true
      tags:
      - Campanhas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCampaign'
            examples:
              ExemploDeRequisição:
                value:
                  CPM: 20
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCampaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCampaign'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
              examples:
                ExemploDeResposta:
                  value:
                    uid: 123e4567-e89b-12d3-a456-426614174000
                    title: Campanha ZeroOne
                    integrations:
                    - 90490bae-7ebe-4f44-9ebf-ce81ee03e60f
                    CPM: 20
                    source: Kwai
                    created_at: '2025-03-20T12:00:00Z'
                  summary: Exemplo de Resposta
          description: ''
    delete:
      operationId: campaigns_destroy
      description: Endpoint para deletar uma campanha específica usando o UUID como
        identificador.
      summary: Deletar uma campanha
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID da campanha a ser deletada.
        required: true
      tags:
      - Campanhas
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /campaigns/delete-multiple/:
    post:
      operationId: campaigns_delete_multiple_create
      description: Permite deletar várias campanhas enviando os UUIDs no corpo da
        requisição.
      tags:
      - campaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
  /integration/{uid}/:
    get:
      operationId: integration_retrieve
      description: Retorna os detalhes de uma integração específica do usuário autenticado.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - integration
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
  /integrations-user/:
    get:
      operationId: integrations_user_list
      description: Endpoint para listar as integrações do usuário autenticado com
        suporte a paginação, ordenação e busca.
      summary: Listar integrações
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
        description: Número da página para paginação.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Número de itens por página.
      - in: query
        name: search
        schema:
          type: string
        description: 'Palavra-chave para busca nos campos definidos: `id`, `title`,
          `description`, `created_at`. Exemplo: `?search=Python` para buscar integrações
          relacionadas a ''Python''.'
      tags:
      - Integrações
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntegrationList'
          description: ''
    post:
      operationId: integrations_user_create
      description: Cria uma nova integração vinculada ao usuário autenticado.
      tags:
      - integrations-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Integration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Integration'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
  /integrations-user/{uid}/:
    get:
      operationId: integrations_user_retrieve
      description: Retorna os detalhes de uma integração específica do usuário autenticado.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - integrations-user
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
    put:
      operationId: integrations_user_update
      description: Atualiza uma integração se o usuário autenticado for o proprietário.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - integrations-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Integration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Integration'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
    patch:
      operationId: integrations_user_partial_update
      description: Atualiza parcialmente uma integração se o usuário autenticado for
        o proprietário.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - integrations-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIntegration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIntegration'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
    delete:
      operationId: integrations_user_destroy
      description: Deleta uma integração se o usuário autenticado for o proprietário.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - integrations-user
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /integrations-user/delete-multiple/:
    post:
      operationId: integrations_user_delete_multiple_create
      description: Permite deletar várias integrações enviando os UUIDs no corpo da
        requisição.
      tags:
      - integrations-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMultiple'
            examples:
              ExemploDeRequisição:
                value:
                  uids:
                  - 54cc3376-3a92-4d39-8235-5d039e7df8d1
                  - 65406f8a-80b2-4a9e-b3d2-f2475a976f6b
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeleteMultiple'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeleteMultiple'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExemploDeResposta:
                  value:
                    message: 2 integração(ões) excluída(s) com sucesso.
                    deleted_count: 2
                    deleted_uids:
                    - 54cc3376-3a92-4d39-8235-5d039e7df8d1
                    - 65406f8a-80b2-4a9e-b3d2-f2475a976f6b
                    not_found: []
                  summary: Exemplo de Resposta
          description: ''
  /integrations/gateways/:
    get:
      operationId: integrations_gateways_retrieve
      tags:
      - integrations
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /payment/:
    post:
      operationId: payment_create
      description: Cria um novo pagamento para uma assinatura.
      tags:
      - payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionPayment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPayment'
          description: ''
  /payment/{uid}/:
    get:
      operationId: payment_retrieve
      description: Verifica o status de um pagamento PIX específico.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - payment
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPayment'
          description: ''
  /payment/status/{uid}/:
    get:
      operationId: payment_status_retrieve
      description: Verifica o status de um pagamento específico.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - payment
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPayment'
          description: ''
  /plans/:
    get:
      operationId: plans_list
      description: ViewSet para operações CRUD de Planos (GET público, modificações
        restritas a admins)
      parameters:
      - in: query
        name: duration
        schema:
          type: string
          enum:
          - month
          - year
        description: |-
          * `month` - Mensal
          * `year` - Anual
      - in: query
        name: is_current
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: price__gte
        schema:
          type: number
        description: Filtrar por preço mínimo
      - in: query
        name: price__lte
        schema:
          type: number
        description: Filtrar por preço máximo
      tags:
      - plans
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanList'
          description: ''
    post:
      operationId: plans_create
      description: ViewSet para operações CRUD de Planos (GET público, modificações
        restritas a admins)
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /plans/{id}/:
    get:
      operationId: plans_retrieve
      description: ViewSet para operações CRUD de Planos (GET público, modificações
        restritas a admins)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plan.
        required: true
      tags:
      - plans
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    put:
      operationId: plans_update
      description: ViewSet para operações CRUD de Planos (GET público, modificações
        restritas a admins)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plan.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    patch:
      operationId: plans_partial_update
      description: ViewSet para operações CRUD de Planos (GET público, modificações
        restritas a admins)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plan.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlan'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    delete:
      operationId: plans_destroy
      description: ViewSet para operações CRUD de Planos (GET público, modificações
        restritas a admins)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plan.
        required: true
      tags:
      - plans
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /subscriptions/:
    post:
      operationId: subscriptions_create
      description: Endpoint para criação de assinaturas (requer autenticação JWT)
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSubscription'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
  /support:
    get:
      operationId: support_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - support
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupportList'
          description: ''
  /support/create/:
    post:
      operationId: support_create_create
      tags:
      - support
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /support/replies/{uid}/:
    get:
      operationId: support_replies_retrieve
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - support
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /transactions/{id}/:
    get:
      operationId: transactions_retrieve
      description: Verifica o status de uma transação específica.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPayment'
          description: ''
  /tutoriais/:
    get:
      operationId: tutoriais_list
      description: Endpoint para listar tutoriais com suporte a paginação, ordenação
        e busca. Os parâmetros opcionais permitem filtrar, ordenar e paginar os resultados.
      summary: Listar tutoriais
      parameters:
      - in: query
        name: order
        schema:
          type: string
          enum:
          - asc
          - desc
        description: 'Direção da ordenação. Use `asc` para ascendente ou `desc` para
          descendente. Exemplo: `?ordering=title&order=desc` para ordenar por título
          em ordem decrescente.'
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Campo para ordenação. Use os campos disponíveis: `id`, `title`,
          `description`, `created_at`. Exemplo: `?ordering=title` para ordenar por
          título.'
      - in: query
        name: page
        schema:
          type: integer
        description: Número da página para paginação.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Número de itens por página.
      - in: query
        name: search
        schema:
          type: string
        description: 'Palavra-chave para busca nos campos definidos: `id`, `title`,
          `description`, `created_at`. Exemplo: `?search=Python` para buscar tutoriais
          relacionados a ''Python''.'
      tags:
      - Tutoriais
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTutorialList'
              examples:
                ExemploDeBusca:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - page: 1
                      page_size: 10
                      ordering: title
                      order: desc
                      search: Python
                  summary: Exemplo de Busca
          description: ''
  /tutoriais/{uid}/:
    get:
      operationId: tutoriais_retrieve
      description: Endpoint para recuperar os detalhes de um tutorial específico.
      summary: Recuperar um tutorial
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID do tutorial a ser recuperado.
        required: true
      tags:
      - Tutoriais
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutorial'
              examples:
                ExemploDeResposta:
                  value:
                    uid: 123e4567-e89b-12d3-a456-426614174000
                    title: Título do Tutorial
                    description: Descrição do Tutorial
                    youtube_url: https://www.youtube.com/watch?v=abc123
                    thumbnail_url: https://example.com/thumbnail.jpg
                  summary: Exemplo de Resposta
          description: ''
    put:
      operationId: tutoriais_update
      description: Endpoint para atualizar os detalhes de um tutorial específico.
      summary: Atualizar um tutorial
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID do tutorial a ser atualizado.
        required: true
      tags:
      - Tutoriais
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tutorial'
            examples:
              ExemploDeRequisição:
                value:
                  title: Novo Título
                  description: Nova descrição
                  youtube_url: https://www.youtube.com/watch?v=xyz456
                  thumbnail_url: https://example.com/new-thumbnail.jpg
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tutorial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tutorial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutorial'
              examples:
                ExemploDeResposta:
                  value:
                    uid: 123e4567-e89b-12d3-a456-426614174000
                    title: Novo Título
                    description: Nova descrição
                    youtube_url: https://www.youtube.com/watch?v=xyz456
                    thumbnail_url: https://example.com/new-thumbnail.jpg
                  summary: Exemplo de Resposta
          description: ''
    patch:
      operationId: tutoriais_partial_update
      description: Endpoint para atualizar parcialmente os detalhes de um tutorial
        específico.
      summary: Atualizar parcialmente um tutorial
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID do tutorial a ser atualizado parcialmente.
        required: true
      tags:
      - Tutoriais
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTutorial'
            examples:
              ExemploDeRequisição:
                value:
                  title: Título Atualizado
                summary: Exemplo de Requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTutorial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTutorial'
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutorial'
              examples:
                ExemploDeResposta:
                  value:
                    uid: 123e4567-e89b-12d3-a456-426614174000
                    title: Título Atualizado
                    description: Descrição do Tutorial
                    youtube_url: https://www.youtube.com/watch?v=abc123
                    thumbnail_url: https://example.com/thumbnail.jpg
                  summary: Exemplo de Resposta
          description: ''
    delete:
      operationId: tutoriais_destroy
      description: Endpoint para deletar um tutorial específico.
      summary: Deletar um tutorial
      parameters:
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UUID do tutorial a ser deletado.
        required: true
      tags:
      - Tutoriais
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /tutoriais/create/:
    post:
      operationId: tutoriais_create_create
      description: Endpoint para criar um novo tutorial. Apenas administradores podem
        acessar.
      summary: Criar um novo tutorial
      tags:
      - Tutoriais
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tutorial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tutorial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tutorial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutorial'
          description: ''
  /upload-avatar/:
    post:
      operationId: upload_avatar_create
      description: Endpoint para fazer upload de um avatar para o bucket S3. O avatar
        será armazenado no S3 e a URL será salva no perfil do usuário.
      summary: Fazer upload do avatar do usuário
      tags:
      - Avatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  description: Arquivo de imagem para o avatar (máximo de 10MB).
              required:
              - avatar
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
              examples:
                ExemploDeResposta(Sucesso):
                  value:
                    message: Avatar enviado com sucesso.
                    avatar_url: https://your_bucket_name.s3.your_region.amazonaws.com/avatars/<user_uid>/<file_name>
                  summary: Exemplo de Resposta (Sucesso)
                ExemploDeResposta(Erro-NenhumArquivoEnviado):
                  value:
                    error: Nenhum arquivo enviado.
                  summary: Exemplo de Resposta (Erro - Nenhum arquivo enviado)
                ExemploDeResposta(Erro-ArquivoMuitoGrande):
                  value:
                    error: O arquivo excede o tamanho máximo permitido de 10MB.
                  summary: Exemplo de Resposta (Erro - Arquivo muito grande)
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /webhook/cloudfy/{uid}/:
    post:
      operationId: webhook_cloudfy_create
      description: Processa notificações de transações do gateway de pagamento CloudFy.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/disrupty/{uid}/:
    post:
      operationId: webhook_disrupty_create
      description: Processa notificações de transações do gateway de pagamento Disrupty.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/firebanking/:
    post:
      operationId: webhook_firebanking_create
      description: Processa notificações de pagamento via webhook.
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/ghostspay/{uid}/:
    post:
      operationId: webhook_ghostspay_create
      description: Processa notificações de transações do gateway de pagamento GhostsPay.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/grapefy/{uid}/:
    post:
      operationId: webhook_grapefy_create
      description: Processo notificações de transações do gateway de pagamento Grapefy.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração associada ao webhook.
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/kwai/{uid}/:
    get:
      operationId: webhook_kwai_retrieve
      description: Atualiza a campanha com base na ação recebida (view ou click).
      summary: Atualizar campanha via webhook Kwai
      parameters:
      - in: query
        name: action
        schema:
          type: string
          enum:
          - click
          - view
        description: Ação realizada (view ou click).
      - in: path
        name: uid
        schema:
          type: string
          format: uuid
        description: UID da campanha a ser atualizada.
        required: true
      tags:
      - Webhooks
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExemploDeResposta(Sucesso):
                  value:
                    status: success
                    message: Campaign updated successfully.
                  summary: Exemplo de Resposta (Sucesso)
                ExemploDeResposta(ErroDeValidação-400):
                  value:
                    error: O parâmetro 'action' é obrigatório e deve ser 'view' ou
                      'click'.
                  summary: Exemplo de Resposta (Erro de Validação - 400)
                ExemploDeResposta(CampanhaNãoEncontrada-404):
                  value:
                    detail: Not found.
                  summary: Exemplo de Resposta (Campanha Não Encontrada - 404)
          description: ''
  /webhook/paradisepag/{uid}/:
    post:
      operationId: webhook_paradisepag_create
      description: Processa notificações de transações do gateway de pagamento ParadisePag.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/sunize/{uid}/:
    post:
      operationId: webhook_sunize_create
      description: Processa notificações de transações do gateway de pagamento Sunize.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração associada ao webhook.
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/tribopay/{uid}/:
    post:
      operationId: webhook_tribopay_create
      description: Processa notificações de transações do gateway de pagamento Tribo
        Pay.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/vegacheckout/{uid}/:
    post:
      operationId: webhook_vegacheckout_create
      description: Processa notificações de transações do gateway de pagamento Vega
        Checkout.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/westpay/{uid}/:
    post:
      operationId: webhook_westpay_create
      description: Processa notificações de transações do gateway de pagamento WestPay.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/wolfpay/{uid}/:
    post:
      operationId: webhook_wolfpay_create
      description: Processa notificações de transações do gateway de pagamento WolfPay.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhook/zeroone/{uid}/:
    post:
      operationId: webhook_zeroone_create
      description: Processa notificações de transações do gateway de pagamento ZeroOne.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: UUID da integração
        required: true
      tags:
      - webhook
      security:
      - cookieAuth: []
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Campaign:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
          readOnly: true
        integrations:
          type: array
          items:
            type: string
            format: uuid
        user:
          type: string
          format: uuid
          readOnly: true
        source:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 255
        CPM:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_approved:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_pending:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_approved:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        amount_pending:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_abandoned:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_abandoned:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_canceled:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_canceled:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_refunded:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_refunded:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_rejected:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_rejected:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_chargeback:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_chargeback:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_ads:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,8})?$
        profit:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,5})?$
        ROI:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,5})?$
        total_views:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_clicks:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        stats:
          type: string
          readOnly: true
        overviews:
          type: string
          readOnly: true
      required:
      - CPM
      - created_at
      - id
      - integrations
      - overviews
      - stats
      - title
      - uid
      - updated_at
      - user
    ChangePassword:
      type: object
      description: Serializer para alterar a senha do usuário.
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
        confirm_new_password:
          type: string
          writeOnly: true
      required:
      - confirm_new_password
      - new_password
      - old_password
    DeleteMultiple:
      type: object
      properties:
        uids:
          type: array
          items:
            type: string
            format: uuid
          description: Lista de UUIDs das integrações a serem excluídas.
      required:
      - uids
    DurationEnum:
      enum:
      - month
      - year
      type: string
      description: |-
        * `month` - Mensal
        * `year` - Anual
    GatewayEnum:
      enum:
      - zeroone
      - ghostspay
      - paradisepag
      - disrupty
      - wolfpay
      - vegacheckout
      - cloudfy
      - tribopay
      - westpay
      - sunize
      - grapefy
      type: string
      description: |-
        * `zeroone` - ZeroOne
        * `ghostspay` - GhostsPay
        * `paradisepag` - ParadisePag
        * `disrupty` - Disrupty
        * `wolfpay` - WolfPay
        * `vegacheckout` - VegaCheckout
        * `cloudfy` - CloudFy
        * `tribopay` - TriboPay
        * `westpay` - WestPay
        * `sunize` - Sunize
        * `grapefy` - Grapefy
    Integration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        gateway:
          $ref: '#/components/schemas/GatewayEnum'
        deleted:
          type: boolean
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/IntegrationStatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        webhook_url:
          type: string
          readOnly: true
      required:
      - created_at
      - deleted
      - gateway
      - id
      - name
      - status
      - uid
      - updated_at
      - user
      - webhook_url
    IntegrationStatusEnum:
      enum:
      - active
      - inactive
      type: string
      description: |-
        * `active` - Active
        * `inactive` - Inactive
    Login:
      type: object
      properties:
        identifier:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - identifier
      - password
    PaginatedIntegrationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Integration'
    PaginatedPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PaginatedRegisterList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Register'
    PaginatedSupportList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Support'
    PaginatedTutorialList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tutorial'
    PaginatedUserProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PatchedCampaign:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
          readOnly: true
        integrations:
          type: array
          items:
            type: string
            format: uuid
        user:
          type: string
          format: uuid
          readOnly: true
        source:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 255
        CPM:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_approved:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_pending:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_approved:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        amount_pending:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_abandoned:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_abandoned:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_canceled:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_canceled:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_refunded:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_refunded:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_rejected:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_rejected:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_chargeback:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        amount_chargeback:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_ads:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,8})?$
        profit:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,5})?$
        ROI:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,5})?$
        total_views:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        total_clicks:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        stats:
          type: string
          readOnly: true
        overviews:
          type: string
          readOnly: true
    PatchedIntegration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        gateway:
          $ref: '#/components/schemas/GatewayEnum'
        deleted:
          type: boolean
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/IntegrationStatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        webhook_url:
          type: string
          readOnly: true
    PatchedPlan:
      type: object
      description: Serializador principal para Planos (inclui características)
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          title: Name-plan
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          $ref: '#/components/schemas/DurationEnum'
        duration_value:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_current:
          type: boolean
          title: Active-plan
        description:
          type: string
          title: Description-adm
        features:
          type: array
          items:
            $ref: '#/components/schemas/PlanFeature'
          readOnly: true
    PatchedTutorial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        youtube_url:
          type: string
          format: uri
          maxLength: 200
        thumbnail_url:
          type: string
          format: uri
          maxLength: 200
    PatchedUserUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        account_type:
          type: integer
          nullable: true
    PaymentMethodEnum:
      enum:
      - pix
      type: string
      description: '* `pix` - PIX'
    Plan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          title: Name-plan
          maxLength: 100
        description:
          type: string
          title: Description-adm
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          $ref: '#/components/schemas/DurationEnum'
        duration_value:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - name
      - price
      - uid
    PlanFeature:
      type: object
      description: Serializa as características dos planos (relacionamento 1:N)
      properties:
        text:
          type: string
          title: Feature-description
          maxLength: 200
      required:
      - text
    Register:
      type: object
      properties:
        uid:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        cpf:
          type: string
          maxLength: 11
        name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        plan_uid:
          type: string
          format: uuid
          writeOnly: true
        avatar:
          type: string
          format: uri
          nullable: true
          maxLength: 500
      required:
      - confirm_password
      - cpf
      - date_joined
      - email
      - name
      - password
      - uid
    SubscriptionPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
          readOnly: true
        idempotency:
          type: string
          format: uuid
          readOnly: true
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        token:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        gateway_response:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/SubscriptionPaymentStatusEnum'
          minimum: -2147483648
          maximum: 2147483647
        subscription:
          type: integer
        user:
          type: string
          format: uuid
      required:
      - id
      - idempotency
      - price
      - subscription
      - token
      - uid
      - user
    SubscriptionPaymentStatusEnum:
      enum:
      - 0
      - 1
      type: integer
      description: |-
        * `0` - Pending
        * `1` - Paid
    Support:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        replies:
          type: array
          items:
            type: integer
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - replies
      - title
      - updated_at
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    Tutorial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        youtube_url:
          type: string
          format: uri
          maxLength: 200
        thumbnail_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - id
      - title
      - youtube_url
    UpdateUserPlan:
      type: object
      properties:
        plan_uid:
          type: string
          format: uuid
          writeOnly: true
      required:
      - plan_uid
    UserProfile:
      type: object
      properties:
        uid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        cpf:
          type: string
          maxLength: 11
        avatar:
          type: string
          format: uri
          nullable: true
          maxLength: 500
        date_joined:
          type: string
          format: date-time
          readOnly: true
        active_plan:
          type: string
          readOnly: true
      required:
      - active_plan
      - cpf
      - date_joined
      - email
      - name
      - uid
    UserSubscription:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
        is_active:
          type: boolean
          title: Active-subscription
      required:
      - end_date
      - plan
      - start_date
    UserUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        account_type:
          type: integer
          nullable: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
